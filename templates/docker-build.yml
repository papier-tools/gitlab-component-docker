spec:
  inputs:
    stage:
      default: deploy
    docker-version:
      default: "23.0.1"

    internal-registry-url:
      default: $CI_REGISTRY
    internal-registry-user:
      default: $CI_REGISTRY_USER
    internal-registry-password:
      default: $CI_REGISTRY_PASSWORD

    image-platforms:
      default: "linux/amd64,linux/arm64"
    image-dockerfile:
      default: Dockerfile
    image-build-path:
      default: "."
---

############################
## JOBS
############################

publish-image:
  stage: $[[ inputs.stage ]]
  tags: ["docker","nasticot"]
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:$[[ inputs.docker-version ]]-git
  services:
    - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:$[[ inputs.docker-version ]]-dind
      alias: docker
  before_script:
    - |
      docker login \
        -u $[[ inputs.internal-registry-user ]] \
        -p $[[ inputs.internal-registry-password ]] \
        $[[ inputs.internal-registry-url ]]
    - docker run --privileged --rm tonistiigi/binfmt --install all
    - docker buildx create --use --name multi-arch-builder --driver-opt network=host --driver-opt image=moby/buildkit:v0.10.6
  script:
    - |
      docker buildx build --platform $[[ inputs.image-platforms ]] -t ${IMAGE} \
        -f $[[ inputs.image-dockerfile ]] --push $[[ inputs.image-build-path ]]
  after_script:
    - docker logout
    - docker buildx rm multi-arch-builder
  rules:
    - if: $CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/
      variables:
        IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        IMAGE: $CI_REGISTRY_IMAGE:latest
    - if: $CI_COMMIT_REF_NAME && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      variables:
        IMAGE: $CI_REGISTRY_IMAGE/test:$CI_COMMIT_REF_NAME

create-release:
  stage: $[[ inputs.stage ]]
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script: echo "ðŸ’¥ Creating release $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    description: "ðŸ’¥ [RELEASE] Release $CI_COMMIT_TAG"
  rules:
    - if: $CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/

############################
## WORKFLOW
############################

workflow:
  name: ${PIPELINE_NAME}
  rules:
    # TAG
    - if: $CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/ && $CI_PIPELINE_SOURCE == "push"
      variables:
        IMAGE: $CI_PROJECT_NAME:$CI_COMMIT_TAG
        PIPELINE_NAME: ðŸ’¥ [RELEASE] Deploy ${IMAGE}
    # MASTER
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        IMAGE: $CI_PROJECT_NAME:latest
        PIPELINE_NAME: ðŸš€ [PROD] Deploy ${IMAGE}
    # DEV
    - if: $CI_PIPELINE_SOURCE == "web" && $CI_COMMIT_REF_NAME && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      variables:
        IMAGE: $CI_PROJECT_NAME/test:$CI_COMMIT_REF_NAME
        PIPELINE_NAME: ðŸšš [DEV] Deploy ${IMAGE}
    # OTHER
    - when: never
